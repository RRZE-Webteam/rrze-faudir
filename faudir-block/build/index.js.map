{"version":3,"file":"index.js","mappings":"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AEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://block-faudir/./src/edit.js","webpack://block-faudir/./src/index.js","webpack://block-faudir/./src/editor.scss","webpack://block-faudir/./src/style.scss","webpack://block-faudir/external window \"ReactJSXRuntime\"","webpack://block-faudir/external window [\"wp\",\"apiFetch\"]","webpack://block-faudir/external window [\"wp\",\"blockEditor\"]","webpack://block-faudir/external window [\"wp\",\"blocks\"]","webpack://block-faudir/external window [\"wp\",\"components\"]","webpack://block-faudir/external window [\"wp\",\"element\"]","webpack://block-faudir/external window [\"wp\",\"i18n\"]","webpack://block-faudir/external window [\"wp\",\"serverSideRender\"]","webpack://block-faudir/webpack/bootstrap","webpack://block-faudir/webpack/runtime/chunk loaded","webpack://block-faudir/webpack/runtime/compat get default export","webpack://block-faudir/webpack/runtime/define property getters","webpack://block-faudir/webpack/runtime/hasOwnProperty shorthand","webpack://block-faudir/webpack/runtime/make namespace object","webpack://block-faudir/webpack/runtime/jsonp chunk loading","webpack://block-faudir/webpack/before-startup","webpack://block-faudir/webpack/startup","webpack://block-faudir/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { PanelBody, CheckboxControl, ToggleControl, SelectControl, TextControl } from '@wordpress/components';\nimport { useState, useEffect } from '@wordpress/element';\nimport ServerSideRender from '@wordpress/server-side-render';\nimport apiFetch from '@wordpress/api-fetch';\nimport './editor.scss';\n\nexport default function Edit({ attributes, setAttributes }) {\n    const [categories, setCategories] = useState([]);\n    const [posts, setPosts] = useState([]);\n    const [isLoadingCategories, setIsLoadingCategories] = useState(true);\n    const [isLoadingPosts, setIsLoadingPosts] = useState(false);\n    const [defaultButtonText, setDefaultButtonText] = useState('');\n\n    const {\n        selectedCategory='',\n        selectedPosts=[],\n        showCategory='',\n        showPosts='',\n        selectedPersonIds='',\n        selectedFormat='kompakt',\n        selectedFields=[],\n        groupId='',\n        functionField='',\n        organizationNr='',\n        url='',\n        buttonText='',\n        hideFields=[],\n    } = attributes;\n\n    const availableFields = {\n        displayName: __('Display Name', 'rrze-faudir'),\n        personalTitle: __('Academic Title', 'rrze-faudir'),\n        givenName: __('First Name', 'rrze-faudir'),\n        familyName: __('Last Name', 'rrze-faudir'),\n        personalTitleSuffix: __('Academic Suffix', 'rrze-faudir'),\n        titleOfNobility: __('Title of Nobility', 'rrze-faudir'),\n        email: __('Email', 'rrze-faudir'),\n        phone: __('Phone', 'rrze-faudir'),\n        organization: __('Organization', 'rrze-faudir'),\n        function: __('Function', 'rrze-faudir'),\n        url: __('Url', 'rrze-faudir'),\n        kompaktButton: __('Kompakt Button', 'rrze-faudir'),\n        content: __('Content', 'rrze-faudir'),\n        teasertext: __('Teasertext', 'rrze-faudir'),\n        socialmedia: __('Social Media', 'rrze-faudir'),\n        workplaces: __('Workplaces', 'rrze-faudir'),\n        room: __('Room', 'rrze-faudir'),\n        floor: __('Floor', 'rrze-faudir'),\n        street: __('Street', 'rrze-faudir'),\n        zip: __('Zip', 'rrze-faudir'),\n        city: __('City', 'rrze-faudir'),\n        faumap: __('Fau Map', 'rrze-faudir'),\n        officehours: __('Office Hours', 'rrze-faudir'),\n        consultationhours: __('Consultation Hours', 'rrze-faudir'),\n    };\n\n    const formatFields = {\n        card: [\n            'displayName',\n            'personalTitle',\n            'givenName',\n            'familyName',\n            'personalTitleSuffix',\n            'email',\n            'phone',\n            'function',\n            'socialmedia',\n            'titleOfNobility',\n        ],\n        table: [\n            'displayName',\n            'personalTitle',\n            'givenName',\n            'familyName',\n            'personalTitleSuffix',\n            'email',\n            'phone',\n            'url',\n            'socialmedia',\n            'titleOfNobility',\n        ],\n        list: [\n            'displayName',\n            'personalTitle',\n            'givenName',\n            'familyName',\n            'personalTitleSuffix',\n            'email',\n            'phone',\n            'url',\n            'teasertext',\n            'titleOfNobility',\n        ],\n        kompakt: Object.keys(availableFields),\n        page: Object.keys(availableFields),\n    };\n\n    // Define required fields for each format\n    const requiredFields = {\n        card: ['display_name', 'academic_title', 'first_name', 'last_name'],\n        table: ['display_name', 'academic_title', 'first_name', 'last_name'],\n        list: ['display_name', 'academic_title', 'first_name', 'last_name'],\n        kompakt: ['display_name', 'academic_title', 'first_name', 'last_name'],\n        page: ['display_name', 'academic_title', 'first_name', 'last_name']\n    };\n\n    useEffect(() => {\n        // Only fetch and set default fields if this is a new block (no selectedFields set)\n        if (!attributes.selectedFields || attributes.selectedFields.length === 0) {\n            apiFetch({ \n                path: '/wp/v2/settings/rrze_faudir_options'\n            }).then((settings) => {\n                if (settings?.default_output_fields) {\n                    setAttributes({\n                        selectedFields: settings.default_output_fields\n                    });\n                }\n            }).catch((error) => {\n                console.error('Error fetching default fields:', error);\n            });\n        }\n    }, []); // Empty dependency array means this only runs once when component mounts\n\n    useEffect(() => {\n        // Fetch categories from the REST API\n        apiFetch({ path: '/wp/v2/custom_taxonomy?per_page=100' })\n            .then((data) => {\n                setCategories(data);\n                setIsLoadingCategories(false);\n            })\n            .catch((error) => {\n                console.error('Error fetching categories:', error);\n                setIsLoadingCategories(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        // Fetch all posts from the custom post type\n        setIsLoadingPosts(true);\n        apiFetch({ path: '/wp/v2/custom_person?per_page=100&_fields=id,title,meta' })\n            .then((data) => {\n                setPosts(data);\n                setIsLoadingPosts(false);\n            })\n            .catch((error) => {\n                console.error('Error fetching posts:', error);\n                setIsLoadingPosts(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (!buttonText) {\n            apiFetch({ \n                path: '/wp/v2/settings/rrze_faudir_options'\n            }).then((settings) => {\n                if (settings?.business_card_title) {\n                    setDefaultButtonText(settings.business_card_title);\n                    setAttributes({ buttonText: settings.business_card_title });\n                }\n            }).catch((error) => {\n                console.error('Error fetching button text:', error);\n            });\n        }\n    }, []); // Empty dependency array means this runs once on mount\n\n    const togglePostSelection = (postId, personId) => {\n        const updatedSelectedPosts = selectedPosts.includes(postId)\n            ? selectedPosts.filter((id) => id !== postId) // Deselect post\n            : [...selectedPosts, postId]; // Select post\n            const updatedPersonIds = updatedSelectedPosts.map(id => {\n                const post = posts.find(p => p.id === id);\n                // Ensure the person_id is extracted and filtered properly\n                return post?.meta?.person_id || null;}).filter(Boolean)\n    \n        // Store both post ID and person ID\n        setAttributes({\n            selectedPosts: updatedSelectedPosts,\n            selectedPersonIds: updatedPersonIds,// Remove any null values from the person IDs array\n        });\n    };\n    \n\n    const toggleFieldSelection = (field) => {\n        console.log('Toggling field:', field); // Debug log\n        console.log('Current selectedFields:', selectedFields); // Debug log\n        console.log('Current hideFields:', attributes.hideFields); // Debug log\n\n        const isFieldSelected = selectedFields.includes(field);\n        let updatedSelectedFields;\n        let updatedHideFields = attributes.hideFields || [];\n\n        if (isFieldSelected) {\n            // Remove from selected fields and add to hide fields\n            updatedSelectedFields = selectedFields.filter((f) => f !== field);\n            updatedHideFields = [...updatedHideFields, field];\n        } else {\n            // Add to selected fields and remove from hide fields\n            updatedSelectedFields = [...selectedFields, field];\n            updatedHideFields = updatedHideFields.filter((f) => f !== field);\n        }\n\n        console.log('Updated selectedFields:', updatedSelectedFields); // Debug log\n        console.log('Updated hideFields:', updatedHideFields); // Debug log\n\n        setAttributes({ \n            selectedFields: updatedSelectedFields,\n            hideFields: updatedHideFields\n        });\n    };\n\n    // Modify the format change handler\n    const handleFormatChange = (value) => {\n        setAttributes({ selectedFormat: value });\n        \n        // Only reset fields if explicitly changing format and no fields are selected\n        if (!attributes.selectedFields || attributes.selectedFields.length === 0) {\n            apiFetch({ \n                path: '/wp/v2/settings/rrze_faudir_options'\n            }).then((settings) => {\n                if (settings?.default_output_fields) {\n                    // Filter default fields based on the selected format\n                    const formatSpecificFields = formatFields[value] || [];\n                    const filteredDefaultFields = settings.default_output_fields.filter(\n                        field => formatSpecificFields.includes(field)\n                    );\n                    setAttributes({ \n                        selectedFields: filteredDefaultFields\n                    });\n                }\n            }).catch((error) => {\n                console.error('Error fetching default fields:', error);\n            });\n        }\n    };\n\n    // Add debug logging\n    console.log('Edit component rendering with attributes:', attributes);\n\n    // Transform attributes to match the shortcode format\n    const blockAttributes = {\n        selectedPersonIds: attributes.selectedPersonIds,\n        selectedFields: attributes.selectedFields,\n        selectedFormat: attributes.selectedFormat,\n        selectedCategory: attributes.selectedCategory,\n        groupId: attributes.groupId,\n        functionField: attributes.functionField,\n        organizationNr: attributes.organizationNr,\n        url: attributes.url\n    };\n\n    console.log('Block attributes:', blockAttributes);\n\n    // Add debug output to the rendered component\n    return (\n        <>\n            <InspectorControls>\n                <PanelBody title={__('Settings', 'rrze-faudir')}>\n                    {/* Toggle for Category */}\n                    <ToggleControl\n                        label={__('Show Category', 'rrze-faudir')}\n                        checked={showCategory}\n                        onChange={() => setAttributes({ showCategory: !showCategory })}\n                    />\n\n                    {/* Category Selection */}\n                    {showCategory && (\n                        <>\n                            <h4>{__('Select Category', 'rrze-faudir')}</h4>\n                            {categories.map((category) => (\n                                <CheckboxControl\n                                    key={category.id}\n                                    label={category.name}\n                                    checked={selectedCategory === category.name}\n                                    onChange={() => setAttributes({ selectedCategory: category.name })}\n                                />\n                            ))}\n                        </>\n                    )}\n\n                    {/* Toggle for Posts */}\n                    <ToggleControl\n                        label={__('Show Persons', 'rrze-faudir')}\n                        checked={showPosts}\n                        onChange={() => setAttributes({ showPosts: !showPosts })}\n                    />\n\n                    {/* Posts Selection */}\n                    {showPosts && (\n                        <>\n                            <h4>{__('Select Persons', 'rrze-faudir')}</h4>\n                            {isLoadingPosts ? (\n                                <p>{__('Loading persons...', 'rrze-faudir')}</p>\n                            ) : posts.length > 0 ? (\n                                posts.map((post) => (\n                                    <CheckboxControl\n                                        key={post.id}\n                                        label={post.title.rendered}\n                                        checked={selectedPosts.includes(post.id)}\n                                        onChange={() => togglePostSelection(post.id, post.meta?.person_id)}\n                                    />\n                                ))\n                            ) : (\n                                <p>{__('No posts available.', 'rrze-faudir')}</p>\n                            )}\n                        </>\n                    )}\n\n                    {/* Format Selection */}\n                    <SelectControl\n                        label={__('Select Format', 'rrze-faudir')}\n                        value={selectedFormat || 'list'}\n                        options={[\n                            { value: 'list', label: __('List', 'rrze-faudir') },\n                            { value: 'table', label: __('Table', 'rrze-faudir') },\n                            { value: 'card', label: __('Card', 'rrze-faudir') },\n                            { value: 'kompakt', label: __('Kompakt', 'rrze-faudir') },\n                            { value: 'page', label: __('Page', 'rrze-faudir') },\n                        ]}\n                        onChange={handleFormatChange}\n                    />\n\n\n\n                    {/* Fields Selection */}\n                    {Object.keys(formatFields).map((format) => {\n                        if (selectedFormat === format) {\n                            return (\n                                <div key={format}>\n                                    <h4>{__('Select Fields', 'rrze-faudir')}</h4>\n                                    {formatFields[format].map((field) => (\n                                        <div key={field} style={{ marginBottom: '8px' }}>\n                                            <CheckboxControl\n                                                label={\n                                                    <>\n                                                        {availableFields[field]}\n                                                        <span style={{ \n                                                            marginLeft: '8px',\n                                                            color: selectedFields.includes(field) ? '#4CAF50' : '#f44336',\n                                                            fontSize: '12px'\n                                                        }}>\n                                                            ({selectedFields.includes(field) ? 'show' : 'hide'})\n                                                        </span>\n                                                    </>\n                                                }\n                                                checked={selectedFields.includes(field)}\n                                                onChange={() => toggleFieldSelection(field)}\n                                            />\n                                        </div>\n                                    ))}\n                                </div>\n                            );\n                        }\n                        return null;\n                    })}\n\n                    {/* New Input Fields for Group Id, Function, Organization Nr */}\n                    <TextControl\n                        label={__('Group Id', 'rrze-faudir')}\n                        value={groupId}\n                        onChange={(value) => setAttributes({ groupId: value })}\n                    />\n\n                    <TextControl\n                        label={__('Function', 'rrze-faudir')}\n                        value={functionField}\n                        onChange={(value) => setAttributes({ functionField: value })}\n                    />\n\n                    <TextControl\n                        label={__('Organization Nr', 'rrze-faudir')}\n                        value={organizationNr}\n                        onChange={(value) => setAttributes({ organizationNr: value })}\n                    />\n                     <TextControl\n                        label={__('Custom url', 'rrze-faudir')}\n                        value={url}\n                        onChange={(value) => setAttributes({ url: value })}\n                    />\n                    {/* Button Text Field - Only for Kompakt Format */}\n                    {selectedFormat === 'kompakt' && (\n                        <TextControl\n                            label={__('Button Text', 'rrze-faudir')}\n                            help={__('Default: ', 'rrze-faudir') + defaultButtonText}\n                            value={buttonText}\n                            onChange={(value) => setAttributes({ buttonText: value })}\n                            placeholder={defaultButtonText}\n                        />\n                    )}\n                </PanelBody>\n            </InspectorControls>\n            <div {...useBlockProps()}>\n                {/* Add debug info to the block preview */}\n     \n                {attributes.selectedPersonIds && attributes.selectedPersonIds.length > 0 ? (\n                    <>\n                        <ServerSideRender\n                            block=\"rrze-faudir/block\"\n                            attributes={attributes}\n                            EmptyResponsePlaceholder={() => (\n                                <div style={{ padding: '20px', backgroundColor: '#fff3cd', color: '#856404' }}>\n                                    <p>No content returned from server.</p>\n                                    <details>\n                                        <summary>Debug Information</summary>\n                                        <pre>{JSON.stringify(attributes, null, 2)}</pre>\n                                    </details>\n                                </div>\n                            )}\n                            ErrorResponsePlaceholder={({ response }) => (\n                                <div style={{ padding: '20px', backgroundColor: '#f8d7da', color: '#721c24' }}>\n                                    <p><strong>Error loading content:</strong></p>\n                                    <p>{response?.errorMsg || 'Unknown error occurred'}</p>\n                                    <details>\n                                        <summary>Debug Information</summary>\n                                        <pre>Block: rrze-faudir/block</pre>\n                                        <pre>Response: {JSON.stringify(response, null, 2)}</pre>\n                                        <pre>Attributes: {JSON.stringify(attributes, null, 2)}</pre>\n                                    </details>\n                                </div>\n                            )}\n                        />\n                    </>\n                ) : (\n                    <div style={{ padding: '20px', backgroundColor: '#f8f9fa', textAlign: 'center' }}>\n                        <p>__('Please select persons to display using the sidebar controls.', 'rrze-faudir')</p>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\tsave: () => null,\n} );\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkblock_faudir\"] = globalThis[\"webpackChunkblock_faudir\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","InspectorControls","useBlockProps","PanelBody","CheckboxControl","ToggleControl","SelectControl","TextControl","useState","useEffect","ServerSideRender","apiFetch","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Edit","attributes","setAttributes","categories","setCategories","posts","setPosts","isLoadingCategories","setIsLoadingCategories","isLoadingPosts","setIsLoadingPosts","defaultButtonText","setDefaultButtonText","selectedCategory","selectedPosts","showCategory","showPosts","selectedPersonIds","selectedFormat","selectedFields","groupId","functionField","organizationNr","url","buttonText","hideFields","availableFields","displayName","personalTitle","givenName","familyName","personalTitleSuffix","titleOfNobility","email","phone","organization","function","kompaktButton","content","teasertext","socialmedia","workplaces","room","floor","street","zip","city","faumap","officehours","consultationhours","formatFields","card","table","list","kompakt","Object","keys","page","requiredFields","length","path","then","settings","default_output_fields","catch","error","console","data","business_card_title","togglePostSelection","postId","personId","updatedSelectedPosts","includes","filter","id","updatedPersonIds","map","post","find","p","meta","person_id","Boolean","toggleFieldSelection","field","log","isFieldSelected","updatedSelectedFields","updatedHideFields","f","handleFormatChange","value","formatSpecificFields","filteredDefaultFields","blockAttributes","children","title","label","checked","onChange","category","name","rendered","options","format","style","marginBottom","marginLeft","color","fontSize","help","placeholder","block","EmptyResponsePlaceholder","padding","backgroundColor","JSON","stringify","ErrorResponsePlaceholder","response","errorMsg","textAlign","registerBlockType","metadata","edit","save"],"sourceRoot":""}